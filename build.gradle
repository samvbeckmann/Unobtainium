buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'

version = "1.7.10-1.0"
group = "com.qkninja.unobtainium" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "Unobtainium"

minecraft {
    version = "1.7.10-10.13.2.1291"
}

dependencies {
    compile "mcp.mobius.waila:Waila:1.5.10_1.7.10:dev"
    compile "codechicken:NotEnoughItems:1.7.10-1.0.4.94:dev"
}

configurations.all {
    resolutionStrategy {
        force "codechicken:NotEnoughItems:1.7.10-1.0.4.94:dev"
    }
}

repositories {
    maven { // The repo from which to get waila
        name "Mobius Repo"
        url "http://mobiusstrip.eu/maven"
    }
    maven { // the repo from which to get NEI and stuff
        name 'CB Repo'
        url "http://chickenbones.net/maven/"
    }
}

processResources.doLast {

    description 'Copies resource files to dir FML expects resourcePack to be'

    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    ext.srcFiles = "$projectDir/src/main/resources"
    ext.destDir = "$projectDir/build/classes/main"

    // registering inputs & outputs allow gradle to skip if UP-TO-DATE
    inputs.files srcFiles
    outputs.dir destDir

    println 'starting processResources'
    println 'srcFiles: ' + srcFiles
    println 'destDir: ' + destDir

    copy {
        // replace stuff in mcmod.info, nothing else
        from(srcFiles)
        into(destDir)
        include 'mcmod.info'
        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version

    }

    copy {
        // copy everything else, thats not the mcmod.info
        from(srcFiles)
        into(destDir)
        exclude 'mcmod.info'

    }

}
